// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelationsApp.Data;

#nullable disable

namespace RelationsApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RelationsApp.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("int");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasFilter("[StudentId] IS NOT NULL");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            Street = "Benmore Road",
                            StudentId = 101,
                            Suburb = "Parkmore",
                            UnitNumber = 1,
                            Zip = 2025
                        },
                        new
                        {
                            AddressId = 2,
                            Street = "West Street",
                            StudentId = 102,
                            Suburb = "Rivonia",
                            UnitNumber = 25,
                            Zip = 2026
                        });
                });

            modelBuilder.Entity("RelationsApp.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 101,
                            AddressId = 1,
                            Email = "dngubane@iie.ac.za",
                            Name = "Dumisane",
                            Phone = 155566,
                            Surname = "Ngubs"
                        },
                        new
                        {
                            StudentId = 102,
                            AddressId = 2,
                            Email = "st2737377@vcconnect.ac.za",
                            Name = "Benjie",
                            Phone = 544588,
                            Surname = "Smith"
                        });
                });

            modelBuilder.Entity("RelationsApp.Models.Address", b =>
                {
                    b.HasOne("RelationsApp.Models.Student", "Student")
                        .WithOne("Address")
                        .HasForeignKey("RelationsApp.Models.Address", "StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("RelationsApp.Models.Student", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
